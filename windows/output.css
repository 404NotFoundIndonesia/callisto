/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(0.704 0.191 22.216);
    --color-red-700: oklch(0.505 0.213 27.518);
    --color-yellow-400: oklch(0.852 0.199 91.936);
    --color-yellow-600: oklch(0.681 0.162 75.834);
    --color-green-300: oklch(0.871 0.15 154.449);
    --color-green-600: oklch(0.627 0.194 149.214);
    --color-sky-300: oklch(0.828 0.111 230.318);
    --color-sky-500: oklch(0.685 0.169 237.323);
    --color-blue-400: oklch(0.707 0.165 254.624);
    --color-blue-700: oklch(0.488 0.243 264.376);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-600: oklch(0.446 0.03 256.802);
    --color-neutral-50: oklch(0.985 0 0);
    --color-neutral-100: oklch(0.97 0 0);
    --color-neutral-500: oklch(0.556 0 0);
    --color-neutral-600: oklch(0.439 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-neutral-800: oklch(0.269 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --font-weight-medium: 500;
    --radius-lg: 0.5rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .flex {
    display: flex;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .shrink-2 {
    flex-shrink: 2;
  }
  .grow-1 {
    flex-grow: 1;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-start {
    align-items: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-black\/10 {
    :where(& > :not(:last-child)) {
      border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-\[8px\] {
    border-radius: 8px;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-black\/10 {
    border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-800 {
    background-color: var(--color-neutral-800);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .text-white {
    color: var(--color-white);
  }
  .dark\:border-white\/10 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .dark\:bg-neutral-700 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
}
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
.btn {
  display: flex;
  display: inline-block;
  cursor: pointer;
  align-items: center;
  border-radius: 4px;
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
  background-color: var(--color-white);
  padding-inline: calc(var(--spacing) * 3);
  padding-block: calc(var(--spacing) * 0.5);
  white-space: nowrap;
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 300ms;
  transition-duration: 300ms;
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  &:disabled {
    pointer-events: none;
  }
  &:disabled {
    opacity: 50%;
  }
  @media (prefers-color-scheme: dark) {
    border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-neutral-600);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-white);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-500);
      }
    }
  }
}
.btn.btn-primary {
  background-color: var(--color-blue-700);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-blue-700) 80%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-blue-400);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-blue-400) 80%, transparent);
      }
    }
  }
}
.btn.btn-secondary {
  background-color: var(--color-gray-600);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-gray-600) 80%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-400);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-gray-400) 80%, transparent);
      }
    }
  }
}
.btn.btn-success {
  background-color: var(--color-green-600);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-green-600) 80%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-green-300);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-green-300) 80%, transparent);
      }
    }
  }
}
.btn.btn-danger {
  background-color: var(--color-red-700);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-red-700) 80%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-red-400);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-red-400) 80%, transparent);
      }
    }
  }
}
.btn.btn-warning {
  background-color: var(--color-yellow-600);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-yellow-600) 80%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-yellow-400);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
      }
    }
  }
}
.btn.btn-info {
  background-color: var(--color-sky-500);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--color-sky-500) 80%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-sky-300);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-sky-300) 80%, transparent);
      }
    }
  }
}
.btn.btn-light {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-white);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-black);
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
}
.btn.btn-dark {
  background-color: var(--color-neutral-600);
  color: var(--color-white);
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-neutral-500);
    }
  }
}
input, textarea {
  display: block;
  border-radius: 4px;
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
  border-bottom-color: color-mix(in oklab, var(--color-black) 50%, transparent);
  background-color: var(--color-white);
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 0.5);
  --tw-outline-style: none;
  outline-style: none;
  &:focus {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  &:focus {
    padding-bottom: 1px;
  }
  @media (prefers-color-scheme: dark) {
    border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
  }
  @media (prefers-color-scheme: dark) {
    border-bottom-color: color-mix(in oklab, var(--color-white) 50%, transparent);
  }
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-neutral-700) 50%, transparent);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-white);
  }
  @media (prefers-color-scheme: dark) {
    &:focus {
      background-color: transparent;
    }
  }
}
.input-primary {
  &:focus {
    border-bottom-color: var(--color-blue-400);
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-white);
  }
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
